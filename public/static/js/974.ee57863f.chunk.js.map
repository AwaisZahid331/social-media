{"version":3,"file":"static/js/974.ee57863f.chunk.js","mappings":"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","sources":["cmps/posts/PostsList.jsx","cmps/profile/EditModal.jsx","pages/Profile.jsx","services/imgUpload.service.js"],"sourcesContent":["import { PostPreview } from './post-preview/PostPreview'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport loadingGif from '../../assets/imgs/loading-gif.gif'\r\nimport { useParams } from 'react-router-dom'\r\nimport {\r\n  addPosts,\r\n  addFilterByPosts,\r\n  setNextPage,\r\n  // getPostsLength,\r\n} from '../../store/actions/postActions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const PostsList = () => {\r\n  const dispatch = useDispatch()\r\n  const params = useParams()\r\n  const { posts } = useSelector((state) => state.postModule)\r\n  const { pageNumber } = useSelector((state) => state.postModule)\r\n  const { isPostsLoading } = useSelector((state) => state.postModule)\r\n  const { postsLength } = useSelector((state) => state.postModule)\r\n\r\n  const onLoadNextPage = () => {\r\n    const filterBy = {\r\n      pageNumber,\r\n    }\r\n    if (params.userId) filterBy.userId = params.userId\r\n    if (!postsLength && !posts) return\r\n    if (postsLength === posts?.length) return\r\n    dispatch(addFilterByPosts(filterBy))\r\n    dispatch(addPosts())\r\n    dispatch(setNextPage())\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (posts?.length >= postsLength) return\r\n    if (\r\n      window.scrollY + window.innerHeight + 0.9 >=\r\n      document.documentElement.scrollHeight\r\n    ) {\r\n      onLoadNextPage()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [postsLength])\r\n\r\n  if (!posts)\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <span className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n        </span>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <section className=\"posts-list\">\r\n      {posts.map((post) => (\r\n        <PostPreview key={post._id} post={post} />\r\n      ))}\r\n      <div onClick={onLoadNextPage} className=\"load-more\">\r\n        {!isPostsLoading && posts?.length < postsLength && (\r\n          <p className=\"load-btn\">\r\n            <span>\r\n              <FontAwesomeIcon icon=\"fa-solid fa-caret-down\" />\r\n            </span>\r\n          </p>\r\n        )}\r\n        {isPostsLoading && posts?.length < postsLength && (\r\n          <span className=\"gif-container\">\r\n            <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n          </span>\r\n        )}\r\n        {posts?.length === postsLength && <p>This is the end..</p>}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUser } from '../../store/actions/userActions'\r\nimport { uploadImg } from '../../services/imgUpload.service'\r\n\r\nexport function EditModal({ toggleShowEditModal, user }) {\r\n  const dispatch = useDispatch()\r\n  const [userToUpdate, setUserToUpdate] = useState({\r\n    age: user.age,\r\n    bg: user.bg,\r\n    email: user.email,\r\n    fullname: user.fullname,\r\n    imgUrl: user.imgUrl,\r\n    phone: user.phone,\r\n    profession: user.profession,\r\n    birthDate: user.birthDate,\r\n  })\r\n\r\n  const { age, bg, email, fullname, imgUrl, phone, profession, birthDate } =\r\n    userToUpdate\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  const handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = target.type === 'number' ? +target.value || '' : target.value\r\n    setUserToUpdate((prev) => {\r\n      return {\r\n        ...prev,\r\n        _id: user._id,\r\n        [field]: value,\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSaveUser = () => {\r\n    dispatch(updateUser({ ...user, ...userToUpdate })).then((res) => {\r\n      if (res) toggleShowEditModal()\r\n    })\r\n  }\r\n\r\n  const onUploadImg = async (ev) => {\r\n    const res = await uploadImg(ev)\r\n    setUserToUpdate((prev) => {\r\n      return {\r\n        ...prev,\r\n        imgUrl: res.url,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className=\"edit-modal\">\r\n      <div className=\"bg\" onClick={toggleShowEditModal}></div>\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <p>Edit profile</p>\r\n          <span onClick={toggleShowEditModal}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-container\">\r\n          <form className=\"form\" action=\"\">\r\n            <label htmlFor=\"imgUrl\" className=\"add-file\">\r\n              <div className=\"add-btn\">\r\n                <p>Add image profile</p>\r\n\r\n                <FontAwesomeIcon\r\n                  className=\"upload-logo\"\r\n                  icon=\"fa-solid fa-cloud-arrow-up\"\r\n                />\r\n              </div>\r\n              <input\r\n                onChange={onUploadImg}\r\n                id=\"imgUrl\"\r\n                type=\"file\"\r\n                name=\"imgUrl\"\r\n                hidden\r\n              />\r\n              <img className=\"img-to-upload\" src={imgUrl} alt=\"\" />\r\n            </label>\r\n\r\n            <label htmlFor=\"first-name\" className=\"first-name\">\r\n              <p>\r\n                Fullname <span>*</span>\r\n              </p>\r\n              <input\r\n                name=\"fullname\"\r\n                onChange={handleChange}\r\n                id=\"fullname\"\r\n                type=\"text\"\r\n                value={fullname || ''}\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"email\" className=\"email\">\r\n              <p>Email</p>\r\n              <input\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email || ''}\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"profession\" className=\"profession\">\r\n              <p>Profession</p>\r\n              <input\r\n                name=\"profession\"\r\n                onChange={handleChange}\r\n                id=\"profession\"\r\n                type=\"text\"\r\n                value={profession || ''}\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"age\" className=\"age\">\r\n              <p>Age</p>\r\n              <input\r\n                name=\"age\"\r\n                onChange={handleChange}\r\n                id=\"age\"\r\n                type=\"number\"\r\n                value={age || ''}\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"phone\" className=\"phone\">\r\n              <p>Phone</p>\r\n              <input\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                id=\"phone\"\r\n                type=\"text\"\r\n                value={phone || ''}\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n        <div className=\"btn-save-container\">\r\n          <button onClick={onSaveUser}>Save</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useHistory, useParams } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { userService } from '../services/user/userService'\r\nimport { PostsList } from '../cmps/posts/PostsList'\r\nimport { ImgPreview } from '../cmps/profile/ImgPreview'\r\nimport loadingGif from '../assets/imgs/loading-gif.gif'\r\nimport { EditModal } from '../cmps/profile/EditModal'\r\nimport {\r\n  getPostsLength,\r\n  loadPosts,\r\n  setCurrPage,\r\n  setFilterByPosts,\r\n} from '../store/actions/postActions'\r\nimport { updateUser } from '../store/actions/userActions'\r\n\r\nfunction Profile() {\r\n  const params = useParams()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [user, setUser] = useState(null)\r\n  const [isShowImdProfile, setIsShowImdProfile] = useState(false)\r\n  const [isShowEditModal, setIsShowEditModal] = useState(false)\r\n  const [isConnected, setIsConnected] = useState(null)\r\n\r\n  const { posts } = useSelector((state) => state.postModule)\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const checkIsConnected = () => {\r\n    const isConnected = loggedInUser?.connections?.some(\r\n      (connection) => connection?.userId === user?._id\r\n    )\r\n\r\n    setIsConnected(isConnected)\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIsConnected()\r\n    return () => {}\r\n  }, [user])\r\n\r\n  const loadUser = async () => {\r\n    const user = await userService.getById(params.userId)\r\n    setUser(() => user)\r\n  }\r\n\r\n  const toggleShowImgProfile = () => {\r\n    setIsShowImdProfile((prev) => !prev)\r\n  }\r\n  const toggleShowEditModal = () => {\r\n    setIsShowEditModal((prev) => !prev)\r\n  }\r\n\r\n  const onShowProfile = () => {\r\n    toggleShowImgProfile()\r\n  }\r\n\r\n  const connectProfile = async () => {\r\n    if (!user) return\r\n    if (isConnected === true) {\r\n      // Remove\r\n      const connectionToRemve = JSON.parse(JSON.stringify(user))\r\n      const loggedInUserToUpdate = JSON.parse(JSON.stringify(loggedInUser))\r\n\r\n      loggedInUserToUpdate.connections =\r\n        loggedInUserToUpdate.connections.filter(\r\n          (connection) => connection.userId !== connectionToRemve._id\r\n        )\r\n\r\n      connectionToRemve.connections = connectionToRemve.connections.filter(\r\n        (connection) => connection.userId !== loggedInUserToUpdate._id\r\n      )\r\n\r\n      dispatch(updateUser(loggedInUserToUpdate))\r\n      dispatch(updateUser(connectionToRemve))\r\n\r\n      setUser((prev) => ({ ...prev, ...connectionToRemve }))\r\n    } else if (isConnected === false) {\r\n      // Add\r\n      const connectionToAdd = JSON.parse(JSON.stringify(user))\r\n\r\n      const loggedInUserToUpdate = JSON.parse(JSON.stringify(loggedInUser))\r\n\r\n      connectionToAdd.connections.unshift({\r\n        userId: loggedInUserToUpdate._id,\r\n        fullname: loggedInUserToUpdate.fullname,\r\n      })\r\n\r\n      loggedInUserToUpdate.connections.push({\r\n        userId: connectionToAdd._id,\r\n        fullname: connectionToAdd.fullname,\r\n      })\r\n\r\n      await dispatch(updateUser(loggedInUserToUpdate))\r\n      await dispatch(updateUser(connectionToAdd))\r\n      setUser(connectionToAdd)\r\n    }\r\n  }\r\n\r\n  const moveToChat = () => {\r\n    history.push(`/main/message/${user?._id}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const filterBy = {\r\n      userId: params.userId,\r\n    }\r\n    dispatch(setCurrPage('profile'))\r\n    dispatch(setFilterByPosts(filterBy))\r\n    // dispatch(getPostsLength())\r\n    loadUser()\r\n    dispatch(loadPosts(filterBy))\r\n    dispatch(getPostsLength())\r\n\r\n    return () => {\r\n      dispatch(setFilterByPosts(null))\r\n    }\r\n  }, [params.userId, loggedInUser])\r\n\r\n  if (!user)\r\n    return (\r\n      <section className=\"feed-load\">\r\n        <span className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n        </span>\r\n      </section>\r\n    )\r\n\r\n  const isLoggedInUserProfile = loggedInUser?._id === user?._id\r\n\r\n  // console.log('render profile')\r\n  return (\r\n    <section className=\"profile-page\">\r\n      <div className=\"left\">\r\n        <div className=\"user-profile\">\r\n          <div className=\"bg\" style={{ backgroundImage: `url(${user.bg})` }}>\r\n            <div className=\"img-container\" onClick={onShowProfile}>\r\n              <img src={user.imgUrl} alt=\"\" className=\"img\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"user-details\">\r\n            <div>\r\n              <div className=\"name\">\r\n                <h1>{user.fullname}</h1>\r\n              </div>\r\n              <div className=\"profession\">\r\n                <p>{user.profession}</p>\r\n              </div>\r\n              <div className=\"profession\">\r\n                <p>{user.email}</p>\r\n              </div>\r\n              <div className=\"btns-container\">\r\n                {isLoggedInUserProfile && (\r\n                  <button className=\"add-details\" onClick={toggleShowEditModal}>\r\n                    Edit profile\r\n                  </button>\r\n                )}\r\n                {!isLoggedInUserProfile && (\r\n                  <button className=\"connect\" onClick={connectProfile}>\r\n                    <FontAwesomeIcon icon=\"fa-solid fa-user-plus\" />\r\n                    <p>{!isConnected ? 'Connect' : 'Disconnect'}</p>\r\n                  </button>\r\n                )}\r\n\r\n                {/* <button className=\"follow\">Follow</button> */}\r\n                <button className=\"message\" onClick={() => moveToChat()}>\r\n                  Message\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"user-posts\">\r\n          {(posts?.length && <PostsList posts={posts} />) || (\r\n            <div>\r\n              <p>{user.fullname} has not published any posts yet.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"right\">\r\n        <div className=\"top-div\"></div>\r\n        <div className=\"bottom-div\"></div>\r\n      </div>\r\n      {isShowImdProfile && (\r\n        <ImgPreview\r\n          toggleShowImg={toggleShowImgProfile}\r\n          imgUrl={user.imgUrl}\r\n          title=\"Profile photo\"\r\n        />\r\n      )}\r\n\r\n      {isShowEditModal && (\r\n        <EditModal toggleShowEditModal={toggleShowEditModal} user={user} />\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","export const uploadImg = (ev) => {\n  //Defining our variables\n  const UPLOAD_PRESET = 'social_n_shlomi' //insert yours\n  const CLOUD_NAME = 'duajg3ah1' //insert yours\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n  const FORM_DATA = new FormData()\n  //Building the request body\n  FORM_DATA.append('file', ev.target.files[0]) // form data kind of key : file, add the file we get\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET) // add the upload_preset\n  //Sending a post method request to Cloudinary`s API\n  return fetch(UPLOAD_URL, {\n    // add the img to Cloudinary\n    method: 'POST',\n    body: FORM_DATA,\n  })\n    .then((res) => res.json())\n    .then((res) => res) //return the res\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nexport const uploadVid = (ev) => {\n  //Defining our variables\n  const UPLOAD_PRESET = 'social_n_shlomi' //insert yours\n  const CLOUD_NAME = 'duajg3ah1' //insert yours\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/video/upload`\n  const FORM_DATA = new FormData()\n  //Building the request body\n  FORM_DATA.append('file', ev.target.files[0]) // form data kind of key : file, add the file we get\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET) // add the upload_preset\n  //Sending a post method request to Cloudinary`s API\n  return fetch(UPLOAD_URL, {\n    // add the img to Cloudinary\n    method: 'POST',\n    body: FORM_DATA,\n  })\n    .then((res) => res.json())\n    .then((res) => res) //return the res\n    .catch((err) => console.error(err))\n}\n"],"names":["PostsList","dispatch","useDispatch","params","useParams","posts","useSelector","state","postModule","pageNumber","isPostsLoading","postsLength","onLoadNextPage","filterBy","userId","length","addFilterByPosts","addPosts","setNextPage","handleScroll","window","scrollY","innerHeight","document","documentElement","scrollHeight","useEffect","addEventListener","removeEventListener","className","map","post","_id","onClick","icon","src","loadingGif","alt","EditModal","toggleShowEditModal","user","useState","age","bg","email","fullname","imgUrl","phone","profession","birthDate","userToUpdate","setUserToUpdate","handleChange","target","field","name","value","type","prev","onUploadImg","ev","uploadImg","res","url","action","htmlFor","onChange","id","hidden","updateUser","then","history","useHistory","setUser","isShowImdProfile","setIsShowImdProfile","isShowEditModal","setIsShowEditModal","isConnected","setIsConnected","loggedInUser","userModule","connections","some","connection","checkIsConnected","loadUser","userService","toggleShowImgProfile","connectProfile","connectionToRemve","JSON","parse","stringify","loggedInUserToUpdate","filter","connectionToAdd","unshift","push","setCurrPage","setFilterByPosts","loadPosts","getPostsLength","isLoggedInUserProfile","style","backgroundImage","ImgPreview","toggleShowImg","title","UPLOAD_URL","FORM_DATA","FormData","append","files","fetch","method","body","json","catch","err","console","error","uploadVid"],"sourceRoot":""}