{"version":3,"file":"static/js/869.8e75f757.chunk.js","mappings":"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","sources":["cmps/posts/CreatePostModal.jsx","cmps/posts/PostsList.jsx","cmps/posts/AddPost.jsx","cmps/posts/SortBy.jsx","cmps/posts/Posts.jsx","cmps/RightSideBar.jsx","cmps/CommunityPanel.jsx","cmps/FeedIdentityModule.jsx","cmps/LeftSideBar.jsx","pages/Feed.jsx","services/imgUpload.service.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { uploadImg, uploadVid } from '../../services/imgUpload.service'\r\nimport LoadingGif from '../../assets/imgs/loading-gif.gif'\r\n\r\nexport const CreatePostModal = ({\r\n  toggleShowCreatePost,\r\n  onAddPost,\r\n  isShowCreatePost,\r\n  loggedInUser,\r\n}) => {\r\n  const initPost = {\r\n    body: '',\r\n    imgBodyUrl: null,\r\n    videoBodyUrl: null,\r\n    link: '',\r\n    title: '',\r\n    style: {\r\n      textAlign: 'ltr',\r\n    },\r\n  }\r\n\r\n  const [newPost, setNewPost] = useState(initPost)\r\n  const [isUploding, setIsUploding] = useState(false)\r\n\r\n  const handleChange = async (e) => {\r\n    const field = e.target.name\r\n    let value =\r\n      e.target.type === 'number' ? +e.target.value || '' : e.target.value\r\n    setNewPost((prevCred) => ({\r\n      ...prevCred,\r\n      [field]: value,\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setNewPost(null)\r\n    }\r\n  }, [])\r\n\r\n  const doSubmit = () => {\r\n    onAddPost(newPost)\r\n  }\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput) elInput.focus()\r\n  }\r\n\r\n  const onUploadImg = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadImg(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          imgBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onUploadVideo = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadVid(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          videoBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={\r\n        isShowCreatePost ? ' create-post-modal' : 'hide create-post-modal'\r\n      }\r\n      onClick={(ev) => {\r\n        ev.stopPropagation()\r\n        toggleShowCreatePost()\r\n      }}\r\n    >\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={(ev) => {\r\n          ev.preventDefault()\r\n          doSubmit()\r\n        }}\r\n        onClick={(ev) => {\r\n          ev.stopPropagation()\r\n        }}\r\n      >\r\n        <div className=\"title\">\r\n          <h1>Create a post</h1>\r\n          <span className=\"close-icon\" onClick={toggleShowCreatePost}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"name-container\">\r\n          <div className=\"img-container\">\r\n            <img src={loggedInUser?.imgUrl} alt=\"\" className=\"img-profile\" />\r\n          </div>\r\n          <div className=\"name\">\r\n            <h2>{loggedInUser?.fullname}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <textarea\r\n            required\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"body\"\r\n            name=\"body\"\r\n            value={newPost.txt}\r\n            placeholder=\"What do you want to talk about?\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"link-container\">\r\n          <input\r\n            id=\"link\"\r\n            name=\"link\"\r\n            value={newPost.link}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"Add a link here\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"is-loading-container\">\r\n          <p>\r\n            {isUploding && (\r\n              <span>\r\n                <img src={LoadingGif} alt=\"\" />\r\n              </span>\r\n            )}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container-video-body\">\r\n          <div className=\"body-video\">\r\n            {newPost.videoBodyUrl && (\r\n              <video width=\"100%\" height=\"300\" controls>\r\n                <source src={newPost.videoBodyUrl} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-img-body\">\r\n          <div className=\"body-img\">\r\n            {newPost.imgBodyUrl && (\r\n              <img src={newPost.imgBodyUrl} alt=\"\" className=\"img\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btns-add-container\">\r\n          <div\r\n            className=\"cancel-btn btn\"\r\n            onClick={() => {\r\n              setNewPost({\r\n                body: '',\r\n                imgBodyUrl: null,\r\n                videoBodyUrl: null,\r\n                title: '',\r\n                style: {\r\n                  textAlign: 'ltr',\r\n                },\r\n              })\r\n\r\n              toggleShowCreatePost()\r\n            }}\r\n          >\r\n            Cancel\r\n          </div>\r\n          {!newPost.videoBodyUrl && (\r\n            <div className=\"add-video-btn btn\">\r\n              <label htmlFor=\"videoUrl\" className=\"add-video-container\">\r\n                <input\r\n                  onChange={onUploadVideo}\r\n                  id=\"videoUrl\"\r\n                  type=\"file\"\r\n                  name=\"videoUrl\"\r\n                  accept=\"video/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-video-body\">Add video</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          {!newPost.imgBodyUrl && (\r\n            <div className=\"add-img-btn btn\">\r\n              <label htmlFor=\"imgUrl\" className=\"add-img-container\">\r\n                <input\r\n                  onChange={onUploadImg}\r\n                  id=\"imgUrl\"\r\n                  type=\"file\"\r\n                  name=\"imgUrl\"\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-img-body\">Add photo</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          <button className=\"post-btn btn\">Done</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { PostPreview } from './post-preview/PostPreview'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport loadingGif from '../../assets/imgs/loading-gif.gif'\r\nimport { useParams } from 'react-router-dom'\r\nimport {\r\n  addPosts,\r\n  addFilterByPosts,\r\n  setNextPage,\r\n  // getPostsLength,\r\n} from '../../store/actions/postActions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const PostsList = () => {\r\n  const dispatch = useDispatch()\r\n  const params = useParams()\r\n  const { posts } = useSelector((state) => state.postModule)\r\n  const { pageNumber } = useSelector((state) => state.postModule)\r\n  const { isPostsLoading } = useSelector((state) => state.postModule)\r\n  const { postsLength } = useSelector((state) => state.postModule)\r\n\r\n  const onLoadNextPage = () => {\r\n    const filterBy = {\r\n      pageNumber,\r\n    }\r\n    if (params.userId) filterBy.userId = params.userId\r\n    if (!postsLength && !posts) return\r\n    if (postsLength === posts?.length) return\r\n    dispatch(addFilterByPosts(filterBy))\r\n    dispatch(addPosts())\r\n    dispatch(setNextPage())\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (posts?.length >= postsLength) return\r\n    if (\r\n      window.scrollY + window.innerHeight + 0.9 >=\r\n      document.documentElement.scrollHeight\r\n    ) {\r\n      onLoadNextPage()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [postsLength])\r\n\r\n  if (!posts)\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <span className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n        </span>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <section className=\"posts-list\">\r\n      {posts.map((post) => (\r\n        <PostPreview key={post._id} post={post} />\r\n      ))}\r\n      <div onClick={onLoadNextPage} className=\"load-more\">\r\n        {!isPostsLoading && posts?.length < postsLength && (\r\n          <p className=\"load-btn\">\r\n            <span>\r\n              <FontAwesomeIcon icon=\"fa-solid fa-caret-down\" />\r\n            </span>\r\n          </p>\r\n        )}\r\n        {isPostsLoading && posts?.length < postsLength && (\r\n          <span className=\"gif-container\">\r\n            <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n          </span>\r\n        )}\r\n        {posts?.length === postsLength && <p>This is the end..</p>}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CreatePostModal } from './CreatePostModal'\r\nimport { useState } from 'react'\r\nimport { savePost } from '../../store/actions/postActions'\r\n\r\nexport const AddPost = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const [isShowCreatePost, setIsShowCreatePost] = useState(false)\r\n\r\n  const toggleShowCreatePost = () => {\r\n    setIsShowCreatePost((prev) => !prev)\r\n  }\r\n\r\n  const onAddPost = (post) => {\r\n    const postToAdd = {\r\n      ...post,\r\n      userId: loggedInUser._id,\r\n      fullname: loggedInUser.fullname,\r\n    }\r\n    dispatch(savePost(postToAdd)).then(() => toggleShowCreatePost())\r\n  }\r\n\r\n  return (\r\n    <section className=\"add-post\" onClick={toggleShowCreatePost}>\r\n      <section className=\"top\">\r\n        <div className=\"img-container\">\r\n          <img src={loggedInUser.imgUrl} alt=\"\" className=\"icon\" />\r\n        </div>\r\n        <button className=\"input-container\">\r\n          <span>Start a post</span>\r\n        </button>\r\n      </section>\r\n\r\n      <section className=\"btns-container\">\r\n        <button>\r\n          <FontAwesomeIcon className=\"photo icon\" icon=\"fa-solid fa-image\" />\r\n          <span>Photo</span>\r\n        </button>\r\n        <button>\r\n          <FontAwesomeIcon className=\"video icon\" icon=\"fa-solid fa-video\" />\r\n          <span>Video</span>\r\n        </button>\r\n        <button>\r\n          <FontAwesomeIcon\r\n            className=\"calendar icon\"\r\n            icon=\"fa-solid fa-calendar-days\"\r\n          />\r\n          <span>Event</span>\r\n        </button>\r\n        <button>\r\n          <FontAwesomeIcon\r\n            className=\"newspaper icon\"\r\n            icon=\"fa-solid fa-newspaper\"\r\n          />\r\n          <span>Write article</span>\r\n        </button>\r\n      </section>\r\n      {\r\n        <CreatePostModal\r\n          isShowCreatePost={isShowCreatePost}\r\n          toggleShowCreatePost={toggleShowCreatePost}\r\n          onAddPost={onAddPost}\r\n          loggedInUser={loggedInUser}\r\n        />\r\n      }\r\n    </section>\r\n  )\r\n}\r\n","export const SortBy = ({ onSetSort }) => {\r\n  return (\r\n    <section className=\"sort-by\">\r\n      <hr className=\"divider\" />\r\n      {/* <span>Sort by: Top</span> */}\r\n      <form action=\"\" className=\"sort-container\">\r\n        <label htmlFor=\"sortBy\" className=\"label\">\r\n          Sort by:\r\n          {/* <FontAwesomeIcon icon=\"fa-solid fa-sort-down\" /> */}\r\n          <select\r\n            name=\"sortBy\"\r\n            id=\"opts\"\r\n            onChange={(e) => {\r\n              onSetSort(e.target.value)\r\n            }}\r\n          >\r\n            <option value=\"-1\">Newest</option>\r\n            <option value=\"1\">Oldest</option>\r\n          </select>\r\n        </label>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AddPost } from './AddPost'\r\nimport { PostsList } from './PostsList'\r\nimport { SortBy } from './SortBy'\r\nimport {\r\n  loadPosts,\r\n  addFilterByPosts,\r\n  getPostsLength,\r\n} from '../../store/actions/postActions'\r\nimport loadongGif from '../../assets/imgs/loading-gif.gif'\r\n\r\nexport const Posts = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { posts } = useSelector((state) => state.postModule)\r\n\r\n  useEffect(() => {\r\n    dispatch(loadPosts())\r\n    dispatch(getPostsLength())\r\n  }, [dispatch])\r\n\r\n  const onSetSort = (value) => {\r\n    const filterBy = {\r\n      sort: +value,\r\n    }\r\n    dispatch(addFilterByPosts(filterBy))\r\n    dispatch(loadPosts())\r\n    dispatch(getPostsLength())\r\n  }\r\n\r\n  if (!posts)\r\n    return (\r\n      <section className=\"posts\">\r\n        <img\r\n          src={loadongGif}\r\n          alt=\"\"\r\n          style={{\r\n            position: 'relative',\r\n            left: ' 50%',\r\n            transform: ' translate(-50%)',\r\n          }}\r\n        />\r\n      </section>\r\n    )\r\n\r\n  return (\r\n    <section className=\"posts\">\r\n      <AddPost />\r\n      <SortBy onSetSort={onSetSort} />\r\n      {posts && <PostsList />}\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getUsers } from '../store/actions/userActions'\r\n\r\nexport const RightSideBar = () => {\r\n  const { users } = useSelector((state) => state.userModule)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers())\r\n  }, [dispatch])\r\n\r\n  const lengtConections = [0, 1, 2]\r\n  return (\r\n    <section className=\"right-side-bar\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <p>Add to your feed</p>\r\n        </div>\r\n        <br />\r\n        <div className=\"list\">\r\n          {users &&\r\n            lengtConections.map((num, idx) => (\r\n              <div\r\n                key={users[num]?._id || idx}\r\n                className=\"preview\"\r\n                onClick={() => history.push(`profile/${users[num]?._id}`)}\r\n              >\r\n                <div className=\"img-container\">\r\n                  <img src={users[num]?.imgUrl} className=\"img\" alt=\"\" />\r\n                </div>\r\n                <div>\r\n                  <div className=\"fullname\">\r\n                    <p>{users[num]?.fullname}</p>\r\n                  </div>\r\n                  <div className=\"profession\">\r\n                    <p>{users[num]?.profession}</p>\r\n                  </div>\r\n                  <div className=\"btn\">{/* <button>Connect</button> */}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"else-container\">\r\n        <div>\r\n          <h3>Promoted</h3>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <p>Taskday is a project management system for collaboration.</p>\r\n        </div>\r\n        <br />\r\n        <div className=\"img-container\">\r\n          <a href=\"https://fast-eyrie-76140.herokuapp.com/\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/duajg3ah1/image/upload/v1660916126/myPortfolio/qdtzolm9ldd5qlquq2aj.png\"\r\n              className=\"img\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","export function CommunityPanel(props) {\r\n  return (\r\n    <section className=\"community-panel\">\r\n      <div>\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1488646953014-85cb44e25828?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1035&q=80\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Explore topics you are interested in <br /> with Travelsdin\r\n        </p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const FeedIdentityModule = (props) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const doLogout = async () => {\r\n    dispatch(logout()).then((res) => {\r\n      if (res) history.push(`/`)\r\n    })\r\n  }\r\n\r\n  if (!loggedInUser)\r\n    return <section className=\"feed-identity-module\">Loading</section>\r\n\r\n  const { fullname, imgUrl, profession } = loggedInUser\r\n\r\n  return (\r\n    <section className=\"feed-identity-module\">\r\n      <div className=\"\">\r\n        <div className=\"bg\">\r\n          <div\r\n            className=\"profile-container\"\r\n            onClick={() => history.push(`profile/${loggedInUser._id}`)}\r\n          >\r\n            <img src={imgUrl} alt=\"\" className=\"img\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-name\">\r\n          <h1>{fullname}</h1>\r\n          <p className=\"professional\">{profession}</p>\r\n        </div>\r\n\r\n        <div className=\"views\">\r\n          <div>\r\n            <p>{loggedInUser?.connections?.length} connections</p>\r\n            {/* <span>245</span> */}\r\n          </div>\r\n\r\n          <div>\r\n            {/* <p>Impressions of your post</p>\r\n            <span>2164</span> */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"to-premium\">\r\n          <p>Access exclusive tools & insights</p>\r\n          <div>\r\n            <span className=\"logo\">o</span>\r\n            <p>Try Premium for free</p>\r\n          </div>\r\n        </div> */}\r\n\r\n        <div className=\"my-items\">\r\n          <div onClick={doLogout}>\r\n            {/* <span>o</span>\r\n            My items */}\r\n            <p>Logout</p>\r\n            <span>\r\n              <FontAwesomeIcon icon=\"fa-solid fa-arrow-right-from-bracket\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { CommunityPanel } from './CommunityPanel'\r\nimport { FeedIdentityModule } from './FeedIdentityModule'\r\n\r\nexport function LeftSideBar(props) {\r\n  return (\r\n    <section className=\"left-side-bar\">\r\n      <FeedIdentityModule />\r\n      <CommunityPanel />\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Posts } from '../cmps/posts/Posts'\r\nimport { RightSideBar } from '../cmps/RightSideBar'\r\nimport { LeftSideBar } from '../cmps/LeftSideBar'\r\nimport { setCurrPage, setNextPage } from '../store/actions/postActions'\r\nimport loadongGif from '../assets/imgs/loading-gif.gif'\r\n\r\nconst Feed = (props) => {\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('home'))\r\n    dispatch(setNextPage(1))\r\n  }, [dispatch])\r\n\r\n  if (!loggedInUser)\r\n    return (\r\n      <section className=\"feed-load\">\r\n        <div className=\"loading\">\r\n          <span>\r\n            <img src={loadongGif} alt=\"\" />\r\n          </span>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n  return (\r\n    <section className=\"feed-page\">\r\n      <LeftSideBar />\r\n      <Posts />\r\n      <RightSideBar />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Feed\r\n","export const uploadImg = (ev) => {\n  //Defining our variables\n  const UPLOAD_PRESET = 'social_n_shlomi' //insert yours\n  const CLOUD_NAME = 'duajg3ah1' //insert yours\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n  const FORM_DATA = new FormData()\n  //Building the request body\n  FORM_DATA.append('file', ev.target.files[0]) // form data kind of key : file, add the file we get\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET) // add the upload_preset\n  //Sending a post method request to Cloudinary`s API\n  return fetch(UPLOAD_URL, {\n    // add the img to Cloudinary\n    method: 'POST',\n    body: FORM_DATA,\n  })\n    .then((res) => res.json())\n    .then((res) => res) //return the res\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nexport const uploadVid = (ev) => {\n  //Defining our variables\n  const UPLOAD_PRESET = 'social_n_shlomi' //insert yours\n  const CLOUD_NAME = 'duajg3ah1' //insert yours\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/video/upload`\n  const FORM_DATA = new FormData()\n  //Building the request body\n  FORM_DATA.append('file', ev.target.files[0]) // form data kind of key : file, add the file we get\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET) // add the upload_preset\n  //Sending a post method request to Cloudinary`s API\n  return fetch(UPLOAD_URL, {\n    // add the img to Cloudinary\n    method: 'POST',\n    body: FORM_DATA,\n  })\n    .then((res) => res.json())\n    .then((res) => res) //return the res\n    .catch((err) => console.error(err))\n}\n"],"names":["CreatePostModal","toggleShowCreatePost","onAddPost","isShowCreatePost","loggedInUser","useState","body","imgBodyUrl","videoBodyUrl","link","title","style","textAlign","newPost","setNewPost","isUploding","setIsUploding","handleChange","e","field","target","name","value","type","prevCred","useEffect","onUploadImg","ev","uploadImg","res","prev","url","console","log","onUploadVideo","uploadVid","className","onClick","stopPropagation","onSubmit","preventDefault","icon","src","imgUrl","alt","fullname","required","ref","elInput","focus","onChange","id","txt","placeholder","LoadingGif","width","height","controls","htmlFor","accept","hidden","PostsList","dispatch","useDispatch","params","useParams","posts","useSelector","state","postModule","pageNumber","isPostsLoading","postsLength","onLoadNextPage","filterBy","userId","length","addFilterByPosts","addPosts","setNextPage","handleScroll","window","scrollY","innerHeight","document","documentElement","scrollHeight","addEventListener","removeEventListener","map","post","_id","loadingGif","AddPost","userModule","setIsShowCreatePost","postToAdd","savePost","then","SortBy","onSetSort","action","Posts","loadPosts","getPostsLength","sort","loadongGif","position","left","transform","RightSideBar","users","history","useHistory","getUsers","num","idx","push","profession","href","CommunityPanel","props","FeedIdentityModule","doLogout","logout","connections","LeftSideBar","setCurrPage","UPLOAD_URL","FORM_DATA","FormData","append","files","fetch","method","json","catch","err","error"],"sourceRoot":""}