{"version":3,"file":"static/js/433.a684f0e8.chunk.js","mappings":"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","sources":["cmps/posts/CreatePostModal.jsx","cmps/profile/ImgPreview.jsx","cmps/map/UserIconPos.jsx","cmps/map/MapMenu.jsx","cmps/map/PostIconMap.jsx","pages/Map.jsx","services/imgUpload.service.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { uploadImg, uploadVid } from '../../services/imgUpload.service'\r\nimport LoadingGif from '../../assets/imgs/loading-gif.gif'\r\n\r\nexport const CreatePostModal = ({\r\n  toggleShowCreatePost,\r\n  onAddPost,\r\n  isShowCreatePost,\r\n  loggedInUser,\r\n}) => {\r\n  const initPost = {\r\n    body: '',\r\n    imgBodyUrl: null,\r\n    videoBodyUrl: null,\r\n    link: '',\r\n    title: '',\r\n    style: {\r\n      textAlign: 'ltr',\r\n    },\r\n  }\r\n\r\n  const [newPost, setNewPost] = useState(initPost)\r\n  const [isUploding, setIsUploding] = useState(false)\r\n\r\n  const handleChange = async (e) => {\r\n    const field = e.target.name\r\n    let value =\r\n      e.target.type === 'number' ? +e.target.value || '' : e.target.value\r\n    setNewPost((prevCred) => ({\r\n      ...prevCred,\r\n      [field]: value,\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setNewPost(null)\r\n    }\r\n  }, [])\r\n\r\n  const doSubmit = () => {\r\n    onAddPost(newPost)\r\n  }\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput) elInput.focus()\r\n  }\r\n\r\n  const onUploadImg = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadImg(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          imgBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onUploadVideo = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadVid(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          videoBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={\r\n        isShowCreatePost ? ' create-post-modal' : 'hide create-post-modal'\r\n      }\r\n      onClick={(ev) => {\r\n        ev.stopPropagation()\r\n        toggleShowCreatePost()\r\n      }}\r\n    >\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={(ev) => {\r\n          ev.preventDefault()\r\n          doSubmit()\r\n        }}\r\n        onClick={(ev) => {\r\n          ev.stopPropagation()\r\n        }}\r\n      >\r\n        <div className=\"title\">\r\n          <h1>Create a post</h1>\r\n          <span className=\"close-icon\" onClick={toggleShowCreatePost}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"name-container\">\r\n          <div className=\"img-container\">\r\n            <img src={loggedInUser?.imgUrl} alt=\"\" className=\"img-profile\" />\r\n          </div>\r\n          <div className=\"name\">\r\n            <h2>{loggedInUser?.fullname}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <textarea\r\n            required\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"body\"\r\n            name=\"body\"\r\n            value={newPost.txt}\r\n            placeholder=\"What do you want to talk about?\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"link-container\">\r\n          <input\r\n            id=\"link\"\r\n            name=\"link\"\r\n            value={newPost.link}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"Add a link here\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"is-loading-container\">\r\n          <p>\r\n            {isUploding && (\r\n              <span>\r\n                <img src={LoadingGif} alt=\"\" />\r\n              </span>\r\n            )}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container-video-body\">\r\n          <div className=\"body-video\">\r\n            {newPost.videoBodyUrl && (\r\n              <video width=\"100%\" height=\"300\" controls>\r\n                <source src={newPost.videoBodyUrl} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-img-body\">\r\n          <div className=\"body-img\">\r\n            {newPost.imgBodyUrl && (\r\n              <img src={newPost.imgBodyUrl} alt=\"\" className=\"img\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btns-add-container\">\r\n          <div\r\n            className=\"cancel-btn btn\"\r\n            onClick={() => {\r\n              setNewPost({\r\n                body: '',\r\n                imgBodyUrl: null,\r\n                videoBodyUrl: null,\r\n                title: '',\r\n                style: {\r\n                  textAlign: 'ltr',\r\n                },\r\n              })\r\n\r\n              toggleShowCreatePost()\r\n            }}\r\n          >\r\n            Cancel\r\n          </div>\r\n          {!newPost.videoBodyUrl && (\r\n            <div className=\"add-video-btn btn\">\r\n              <label htmlFor=\"videoUrl\" className=\"add-video-container\">\r\n                <input\r\n                  onChange={onUploadVideo}\r\n                  id=\"videoUrl\"\r\n                  type=\"file\"\r\n                  name=\"videoUrl\"\r\n                  accept=\"video/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-video-body\">Add video</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          {!newPost.imgBodyUrl && (\r\n            <div className=\"add-img-btn btn\">\r\n              <label htmlFor=\"imgUrl\" className=\"add-img-container\">\r\n                <input\r\n                  onChange={onUploadImg}\r\n                  id=\"imgUrl\"\r\n                  type=\"file\"\r\n                  name=\"imgUrl\"\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-img-body\">Add photo</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          <button className=\"post-btn btn\">Done</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { userService } from '../../services/user/userService'\r\n\r\nexport function ImgPreview({\r\n  toggleShowImg,\r\n  imgUrl,\r\n  videoUrl,\r\n  title,\r\n  post,\r\n  body,\r\n}) {\r\n  const history = useHistory()\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  const loadUser = async (userId) => {\r\n    const user = await userService.getById(userId)\r\n    setUser(user)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (post?.userId) loadUser(post.userId)\r\n    // console.log({ user })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"img-profile-preview\">\r\n      <div className=\"bg\" onClick={toggleShowImg}></div>\r\n      <section className=\"container\">\r\n        <div className=\"title\">\r\n          {(user && post && (\r\n            <div\r\n              className=\"user-details\"\r\n              onClick={() => history.push(`/main/profile/${post.userId}`)}\r\n            >\r\n              <img src={user.imgUrl} alt=\"\" className=\"img\" />\r\n              <p className=\"fullname\">{user.fullname}</p>\r\n            </div>\r\n          )) ||\r\n            (post && <p className=\"user-details\">Loading user...</p>)}\r\n\r\n          <p>{title}</p>\r\n\r\n          <span className=\"logo-close\" onClick={toggleShowImg}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        {body && (\r\n          <div>\r\n            <p className=\"body\">{body}</p>\r\n          </div>\r\n        )}\r\n\r\n        {post && (\r\n          <div className=\"see-post\">\r\n            <p\r\n              onClick={() =>\r\n                history.push(`/main/post/${post.userId}/${post._id}`)\r\n              }\r\n            >\r\n              See original post\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"img-container\">\r\n          {(imgUrl && <img className=\"img\" src={imgUrl} alt=\"\" />) ||\r\n            (videoUrl && (\r\n              <div>\r\n                <video width=\"100%\" height=\"300\" controls>\r\n                  <source src={videoUrl} type=\"video/mp4\" />\r\n                </video>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const UserIconPos = ({ url, userId, fullname, isCloseUserIcon }) => {\r\n  const [isUserIconOpen, setisUserIconOpen] = useState(false)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (isCloseUserIcon) {\r\n      setisUserIconOpen(false)\r\n    }\r\n    return () => {}\r\n  }, [isCloseUserIcon])\r\n\r\n  return (\r\n    <div\r\n      className=\"user-icon-pos-container\"\r\n      onClick={(ev) => {\r\n        ev.stopPropagation()\r\n        setisUserIconOpen((prev) => !prev)\r\n      }}\r\n    >\r\n      <img\r\n        className=\"user-icon-pos\"\r\n        src={url}\r\n        alt={fullname}\r\n        title={fullname}\r\n      />\r\n      {isUserIconOpen && (\r\n        <div className=\"menu-container\">\r\n          <div className=\"opts-btns\">\r\n            <div className=\"fullname \">\r\n              <p>{fullname}</p>\r\n            </div>\r\n            <div\r\n              className=\"go-to-profile opt\"\r\n              onClick={() => history.push(`/main/profile/${userId}`)}\r\n            >\r\n              <p>Go to profile</p>\r\n            </div>\r\n            <div\r\n              className=\"send-message opt\"\r\n              onClick={() => history.push(`/main/message/${userId}`)}\r\n            >\r\n              <p>Send a message</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"close\"\r\n            onClick={(ev) => {\r\n              ev.stopPropagation()\r\n              setisUserIconOpen(false)\r\n            }}\r\n          >\r\n            <span>Close</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const MapMenu = ({ menuPosition, setIsCreateShowPost }) => {\r\n  return (\r\n    <section className=\"map-menu\">\r\n      <span className=\"location-icon\">\r\n        <FontAwesomeIcon icon=\"fa-solid fa-location-dot\" />\r\n      </span>\r\n\r\n      <div className=\"opts-container\">\r\n        {/* <div className=\"add-picture opt\">\r\n          <p>Add a picture here</p>\r\n        </div> */}\r\n        <div\r\n          className=\"add-post-to-map opt\"\r\n          onClick={() => {\r\n            setIsCreateShowPost(true)\r\n          }}\r\n        >\r\n          <p>Add a post here</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const PostIconMap = ({ post, setPostToPreview }) => {\r\n  return (\r\n    <section className=\"post-icon-map\">\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"logo-post-icon-map-container\"\r\n          onClick={() => setPostToPreview(post)}\r\n        >\r\n          <span className=\"img-logo\">\r\n            {(post.imgBodyUrl && (\r\n              <img src={post.imgBodyUrl} alt=\"\" className=\"img\" />\r\n            )) ||\r\n              (post.videoBodyUrl && (\r\n                <p>\r\n                  <span className=\"post-logo\">\r\n                    <FontAwesomeIcon icon=\"fa-solid fa-video\" />\r\n                  </span>\r\n                </p>\r\n              )) || (\r\n                <p>\r\n                  <span className=\"post-logo\">\r\n                    <FontAwesomeIcon icon=\"fa-solid fa-comment-dots\" />\r\n                  </span>\r\n                </p>\r\n              )}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { UserIconPos } from '../cmps/map/UserIconPos'\r\nimport { MapMenu } from '../cmps/map/MapMenu'\r\nimport { PostIconMap } from '../cmps/map/PostIconMap'\r\nimport { ImgPreview } from '../cmps/profile/ImgPreview'\r\nimport { CreatePostModal } from '../cmps/posts/CreatePostModal'\r\nimport {\r\n  loadPosts,\r\n  savePost,\r\n  setCurrPage,\r\n  setFilterByPosts,\r\n} from '../store/actions/postActions'\r\nimport {\r\n  getUsers,\r\n  setFilterByUsers,\r\n  updateUser,\r\n} from '../store/actions/userActions'\r\n\r\nfunction Map() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [defaultProps, setDefaultProps] = useState({\r\n    center: {\r\n      lat: 32.05591645013164,\r\n      lng: 34.7549857056555,\r\n    },\r\n    zoom: 2,\r\n    yesIWantToUseGoogleMapApiInternals: true,\r\n  })\r\n  const [isCloseUserIcon, setIsCloseUserIcon] = useState(false)\r\n  const [isMapClicked, setIsMapClicked] = useState(false)\r\n  const [menuPosition, setMenuPosition] = useState(null)\r\n  const [postToPreview, setPostToPreview] = useState(false)\r\n  const [isShowCreatePost, setIsCreateShowPost] = useState(false)\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { users } = useSelector((state) => state.userModule)\r\n  const { posts } = useSelector((state) => state.postModule)\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('map'))\r\n    const filterBy = {\r\n      position: 'position',\r\n    }\r\n    dispatch(setFilterByUsers(filterBy))\r\n    dispatch(getUsers())\r\n    dispatch(setFilterByPosts(filterBy))\r\n    dispatch(loadPosts())\r\n    getLocation()\r\n\r\n    return () => {\r\n      dispatch(setFilterByPosts(null))\r\n      dispatch(setFilterByUsers(null))\r\n    }\r\n  }, [])\r\n\r\n  const saveUser = (position) => {\r\n    if (!loggedInUser) return\r\n    dispatch(updateUser({ ...loggedInUser, position }))\r\n  }\r\n\r\n  const togglePostToPreview = (post) => {\r\n    if (postToPreview) setPostToPreview(null)\r\n    else {\r\n      setPostToPreview(post)\r\n    }\r\n  }\r\n\r\n  const toggleShowCreatePost = () => {\r\n    setIsCreateShowPost((prev) => !prev)\r\n  }\r\n\r\n  const onAddPost = (post) => {\r\n    const postToAdd = {\r\n      ...post,\r\n      userId: loggedInUser._id,\r\n      position: menuPosition,\r\n    }\r\n    dispatch(savePost(postToAdd)).then(() => toggleShowCreatePost())\r\n  }\r\n\r\n  function getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition)\r\n    } else {\r\n      console.log('Geolocation is not supported by this browser.')\r\n    }\r\n  }\r\n  function showPosition(position) {\r\n    const positionToSave = {\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    }\r\n    if (position) saveUser(positionToSave)\r\n  }\r\n\r\n  const closeUserIcon = () => {\r\n    setIsCloseUserIcon((prev) => !prev)\r\n  }\r\n\r\n  const onClickMap = (ev) => {\r\n    const positionOfMenu = {\r\n      lat: ev.lat,\r\n      lng: ev.lng,\r\n    }\r\n    closeUserIcon()\r\n    setMenuPosition(positionOfMenu)\r\n    setIsMapClicked((prev) => !prev)\r\n  }\r\n\r\n  const places = [{ lat: 30.911220168353783, lng: 58.405513914562775 }]\r\n\r\n  return (\r\n    // Important! Always set the container height explicitly\r\n    <section className=\"map-page \">\r\n      <div className=\"map\" style={{ height: '100%', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: `${process.env.REACT_APP_GOOGLE_MAP_KEY}` }}\r\n          defaultCenter={defaultProps.center}\r\n          defaultZoom={defaultProps.zoom}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          // onGoogleApiLoaded={({ map, maps }) =>\r\n          //   handleApiLoaded(map, maps, places)\r\n          // }\r\n          // onChange={() => console.log('onBoundsChange')}\r\n          onClick={(ev) => onClickMap(ev)}\r\n          // onDrag={(map) => console.log('onDrag')}\r\n          // onDragEnd={(map) => console.log('onDragEnd')}\r\n          // onRightClick={() => console.log('onRightClick')}\r\n        >\r\n          {users &&\r\n            users.map((user) => (\r\n              <UserIconPos\r\n                key={user._id}\r\n                lat={user?.position?.lat || 32.05591645013164}\r\n                lng={user?.position?.lng || 34.7549857056555}\r\n                url={user.imgUrl}\r\n                userId={user._id}\r\n                fullname={user.fullname}\r\n                isCloseUserIcon={isCloseUserIcon}\r\n              />\r\n            ))}\r\n\r\n          {posts &&\r\n            posts.map((post) => (\r\n              <PostIconMap\r\n                key={post?._id}\r\n                lat={post?.position?.lat}\r\n                lng={post?.position?.lng}\r\n                post={post}\r\n                setPostToPreview={setPostToPreview}\r\n              />\r\n            ))}\r\n\r\n          {isMapClicked && menuPosition && (\r\n            <MapMenu\r\n              menuPosition={menuPosition}\r\n              lat={menuPosition.lat}\r\n              lng={menuPosition.lng}\r\n              setIsCreateShowPost={setIsCreateShowPost}\r\n            />\r\n          )}\r\n        </GoogleMapReact>\r\n      </div>\r\n\r\n      {postToPreview && (\r\n        <ImgPreview\r\n          toggleShowImg={togglePostToPreview}\r\n          title={postToPreview.title}\r\n          body={postToPreview.body}\r\n          imgUrl={postToPreview.imgBodyUrl}\r\n          post={postToPreview}\r\n          videoUrl={postToPreview?.videoBodyUrl}\r\n        />\r\n      )}\r\n\r\n      {isShowCreatePost && (\r\n        <CreatePostModal\r\n          isShowCreatePost={isShowCreatePost}\r\n          onAddPost={onAddPost}\r\n          toggleShowCreatePost={toggleShowCreatePost}\r\n          loggedInUser={loggedInUser}\r\n        />\r\n      )}\r\n      {/* <button\r\n        onClick={() =>\r\n          setDefaultProps({\r\n            center: {\r\n              lat: 32.29430021651131,\r\n              lng: 58.140507578610226,\r\n            },\r\n            zoom: 6,\r\n            yesIWantToUseGoogleMapApiInternals: true,\r\n          })\r\n        }\r\n      >\r\n        btn\r\n      </button> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Map\r\n","export const uploadImg = (ev) => {\n  //Defining our variables\n  const UPLOAD_PRESET = 'social_n_shlomi' //insert yours\n  const CLOUD_NAME = 'duajg3ah1' //insert yours\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n  const FORM_DATA = new FormData()\n  //Building the request body\n  FORM_DATA.append('file', ev.target.files[0]) // form data kind of key : file, add the file we get\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET) // add the upload_preset\n  //Sending a post method request to Cloudinary`s API\n  return fetch(UPLOAD_URL, {\n    // add the img to Cloudinary\n    method: 'POST',\n    body: FORM_DATA,\n  })\n    .then((res) => res.json())\n    .then((res) => res) //return the res\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\nexport const uploadVid = (ev) => {\n  //Defining our variables\n  const UPLOAD_PRESET = 'social_n_shlomi' //insert yours\n  const CLOUD_NAME = 'duajg3ah1' //insert yours\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/video/upload`\n  const FORM_DATA = new FormData()\n  //Building the request body\n  FORM_DATA.append('file', ev.target.files[0]) // form data kind of key : file, add the file we get\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET) // add the upload_preset\n  //Sending a post method request to Cloudinary`s API\n  return fetch(UPLOAD_URL, {\n    // add the img to Cloudinary\n    method: 'POST',\n    body: FORM_DATA,\n  })\n    .then((res) => res.json())\n    .then((res) => res) //return the res\n    .catch((err) => console.error(err))\n}\n"],"names":["CreatePostModal","toggleShowCreatePost","onAddPost","isShowCreatePost","loggedInUser","useState","body","imgBodyUrl","videoBodyUrl","link","title","style","textAlign","newPost","setNewPost","isUploding","setIsUploding","handleChange","e","field","target","name","value","type","prevCred","useEffect","onUploadImg","ev","uploadImg","res","prev","url","console","log","onUploadVideo","uploadVid","className","onClick","stopPropagation","onSubmit","preventDefault","icon","src","imgUrl","alt","fullname","required","ref","elInput","focus","onChange","id","txt","placeholder","LoadingGif","width","height","controls","htmlFor","accept","hidden","ImgPreview","toggleShowImg","videoUrl","post","history","useHistory","user","setUser","loadUser","userId","userService","push","_id","UserIconPos","isCloseUserIcon","isUserIconOpen","setisUserIconOpen","MapMenu","menuPosition","setIsCreateShowPost","PostIconMap","setPostToPreview","dispatch","useDispatch","center","lat","lng","zoom","yesIWantToUseGoogleMapApiInternals","defaultProps","setIsCloseUserIcon","isMapClicked","setIsMapClicked","setMenuPosition","postToPreview","useSelector","state","userModule","users","posts","postModule","setCurrPage","filterBy","position","setFilterByUsers","getUsers","setFilterByPosts","loadPosts","navigator","geolocation","getCurrentPosition","showPosition","positionToSave","coords","latitude","longitude","updateUser","saveUser","onClickMap","positionOfMenu","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","map","postToAdd","savePost","then","UPLOAD_URL","FORM_DATA","FormData","append","files","fetch","method","json","catch","err","error"],"sourceRoot":""}