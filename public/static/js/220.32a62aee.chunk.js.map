{"version":3,"file":"static/js/220.32a62aee.chunk.js","mappings":"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","sources":["cmps/connections/MyConnectionPreview.jsx","pages/Connections.jsx","../node_modules/react-timeago/es6/dateParser.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/index.js"],"sourcesContent":["import { userService } from '../../services/user/userService'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useEffect, useState } from 'react'\r\nimport TimeAgo from 'react-timeago'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport function MyConnectionPreview({ connection }) {\r\n  const [user, setUser] = useState(null)\r\n\r\n  const history = useHistory()\r\n\r\n  const loadUser = async () => {\r\n    const user = await userService.getById(connection.userId)\r\n    setUser(() => user)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n  if (!user) return\r\n\r\n  return (\r\n    <section className=\"my-connection-preview\">\r\n      <div className=\"container\">\r\n        <div className=\"img-profile\">\r\n          <img src={user.imgUrl} alt=\"\" className=\"img\" />\r\n        </div>\r\n        <div className=\"fullname\">\r\n          <Link to={`/main/profile/${user._id}`}>\r\n            <h3>{user.fullname}</h3>\r\n            <p>{user.profession || ' '}</p>\r\n            {connection?.connected && (\r\n              <p>\r\n                connected <TimeAgo date={connection?.connected} />\r\n              </p>\r\n            )}\r\n          </Link>\r\n        </div>\r\n        <div className=\"btns\">\r\n          <button onClick={() => history.push(`/main/message/${user?._id}`)}>\r\n            Message\r\n          </button>\r\n          <FontAwesomeIcon className=\"dots-icon\" icon=\"fa-solid fa-ellipsis\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { MyConnectionPreview } from '../cmps/connections/MyConnectionPreview'\r\n\r\nfunction Connections() {\r\n  const [connections, setConnections] = useState(null)\r\n  const [field, setField] = useState({ fullname: '' })\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const handleChange = async ({ target }) => {\r\n    const field = target.name\r\n    let value = target.type === 'number' ? +target.value || '' : target.value\r\n    setField({ [field]: value })\r\n    setFilter(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser?.connections) {\r\n      setConnections([...loggedInUser?.connections])\r\n    }\r\n  }, [loggedInUser])\r\n\r\n  const setFilter = (txt) => {\r\n    const regex = new RegExp(txt, 'i')\r\n    const filteredCnnections = [...loggedInUser?.connections].filter(\r\n      (connection) => {\r\n        return regex.test(connection.fullname)\r\n      }\r\n    )\r\n    setConnections(filteredCnnections)\r\n  }\r\n\r\n  if (!loggedInUser) return\r\n\r\n  return (\r\n    <section className=\"connections-page\">\r\n      <div className=\"left main\">\r\n        <div className=\"container\">\r\n          <div className=\"count\">\r\n            <h3>{loggedInUser.connections?.length} Connections</h3>\r\n          </div>\r\n\r\n          <div className=\"filter-container\">\r\n            {/* <div className=\"sort-by\">Sort by: </div> */}\r\n            <div className=\"search\">\r\n              <FontAwesomeIcon className=\"search-icon\" icon=\"fas fa-search\" />\r\n              <input\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                id=\"fullname\"\r\n                name=\"fullname\"\r\n                value={field.fullname}\r\n                placeholder=\"Search by name\"\r\n                className=\"connections-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"my-connection-list\">\r\n            {connections?.map((connection) => (\r\n              <MyConnectionPreview\r\n                key={connection.userId}\r\n                connection={connection}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {/* <ConnectionList users={loggedInUser?.connections} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"right aside\">\r\n        <div></div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Connections\r\n","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dateParser from './dateParser';\nimport defaultFormatter from './defaultFormatter';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = useState(now());\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    const tick = () => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n\n      return 0;\n    };\n\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}"],"names":["MyConnectionPreview","connection","useState","user","setUser","history","useHistory","loadUser","userService","userId","useEffect","className","src","imgUrl","alt","to","_id","fullname","profession","connected","date","onClick","push","icon","connections","setConnections","field","setField","loggedInUser","useSelector","state","userModule","handleChange","target","name","value","type","setFilter","txt","regex","RegExp","filteredCnnections","filter","test","length","onChange","id","placeholder","map","dateParser","parsed","Date","Number","isNaN","valueOf","parts","String","match","arr","x","parseInt","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","firstP","secondP","restPs","correctedParts","UTC","defaultFormatter","_unit","suffix","_extends","Object","assign","bind","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","title","now","passDownProps","timeNow","setTimeNow","timeoutId","then","console","warn","seconds","Math","round","abs","unboundPeriod","period","min","max","setTimeout","tick","clearTimeout","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","React"],"sourceRoot":""}