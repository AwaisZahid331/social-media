{"version":3,"file":"static/js/677.c0b79f55.chunk.js","mappings":"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","sources":["cmps/notifications/NotificaitonPreview.jsx","cmps/notifications/NotificationsList.jsx","pages/Notifications.jsx","../node_modules/react-timeago/es6/dateParser.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userService } from '../../services/user/userService'\r\nimport TimeAgo from 'react-timeago'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { postService } from '../../services/posts/postService'\r\nimport loadingCircle from '../../assets/imgs/loading-circle.gif'\r\n\r\nexport function NotificaitonPreview({ activity }) {\r\n  // const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [theNotLoggedUser, setTheNotLoggedUser] = useState(null)\r\n  const [str, setStr] = useState(null)\r\n  const [link, setLink] = useState(null)\r\n  const [createdByUser, setCreatedByUser] = useState(null)\r\n  const [createdToUser, setCreatedToUser] = useState(null)\r\n  const [isActivityUnread, setIsActivityUnread] = useState(false)\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { baseUrl } = useSelector((state) => state.postModule)\r\n  const { unreadActivities } = useSelector((state) => state.activityModule)\r\n\r\n  const checkIfActivityUnread = () => {\r\n    return unreadActivities.some((activityId) => activityId === activity._id)\r\n  }\r\n\r\n  const getTheNotLoggedInUser = async () => {\r\n    const userId =\r\n      activity.createdBy === loggedInUser._id\r\n        ? activity.createdTo\r\n        : activity.createdBy\r\n\r\n    const user = await userService.getById(userId)\r\n    setTheNotLoggedUser(user)\r\n  }\r\n\r\n  const getTheCreatedByUser = () => {\r\n    const user =\r\n      activity.createdBy === loggedInUser._id ? loggedInUser : theNotLoggedUser\r\n\r\n    setCreatedByUser(user)\r\n  }\r\n\r\n  const getTheCreatedToUser = () => {\r\n    const user =\r\n      activity.createdTo === loggedInUser._id ? loggedInUser : theNotLoggedUser\r\n\r\n    setCreatedToUser(user)\r\n  }\r\n\r\n  const buildActivityStr = async () => {\r\n    if (!createdByUser || !createdToUser) return\r\n\r\n    if (activity.type === 'add-like') {\r\n      const post = await postService.getById(activity.postId)\r\n      const str = `${\r\n        createdByUser?._id === loggedInUser?._id\r\n          ? 'You'\r\n          : createdByUser?.fullname\r\n      } liked  post of ${\r\n        createdToUser._id === loggedInUser._id ? 'you' : createdToUser?.fullname\r\n      }`\r\n\r\n      const linkToPost = `post/${post?.userId}/${activity?.postId}`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    } else if (activity.type === 'remove-like') {\r\n      const post = await postService.getById(activity.postId)\r\n      const str = `${\r\n        createdByUser?._id === loggedInUser?._id\r\n          ? 'You'\r\n          : createdByUser?.fullname\r\n      } unliked  post of ${\r\n        createdToUser._id === loggedInUser._id ? 'you' : createdToUser?.fullname\r\n      }`\r\n\r\n      const linkToPost = `post/${post?.userId}/${activity?.postId}`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    }\r\n    //\r\n    else if (activity.type === 'add-comment') {\r\n      const post = await postService.getById(activity.postId)\r\n      const str = `${\r\n        createdByUser?._id === loggedInUser?._id\r\n          ? 'You'\r\n          : createdByUser?.fullname\r\n      } added a comment in your post `\r\n\r\n      const linkToPost = `post/${post?.userId}/${activity?.postId}`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    } else if (activity.type === 'private-message') {\r\n      const str = `${createdByUser.fullname} sent you a private message`\r\n      const linkToPost = `message/`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    buildActivityStr()\r\n  }, [createdByUser, createdToUser])\r\n\r\n  useEffect(() => {\r\n    getTheCreatedToUser()\r\n    getTheCreatedByUser()\r\n\r\n    return () => {}\r\n  }, [theNotLoggedUser])\r\n\r\n  useEffect(() => {\r\n    if (!theNotLoggedUser) {\r\n      getTheNotLoggedInUser()\r\n    }\r\n\r\n    const isActivityUnread = checkIfActivityUnread()\r\n\r\n    setIsActivityUnread(isActivityUnread)\r\n\r\n    return () => {}\r\n  }, [unreadActivities])\r\n\r\n  return (\r\n    <section\r\n      className={`notificaiton-preview ${isActivityUnread ? 'unread' : ''}`}\r\n      onClick={() => {\r\n        history.push(link)\r\n      }}\r\n    >\r\n      <div className=\"img-container\">\r\n        {(createdByUser?.imgUrl && (\r\n          <img src={createdByUser?.imgUrl} alt=\"\" className=\"img\" />\r\n        )) || <img src={loadingCircle} alt=\"\" />}\r\n\r\n        {/* <img src={createdByUser?.imgUrl} alt=\"\" className=\"img\" /> */}\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {/* <p>{activity.description}</p> */}\r\n        <p>{str}</p>\r\n        {/* <div className=\"actions\">\r\n          <p>reactions</p>\r\n          <p>14 comments</p>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"menu\">\r\n        <p>\r\n          <TimeAgo date={activity.createdAt} />\r\n        </p>\r\n        {/* <span>\r\n          <FontAwesomeIcon icon=\"fa-solid fa-ellipsis\" />\r\n        </span> */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { NotificaitonPreview } from './NotificaitonPreview'\r\n\r\nexport function NotificationsList() {\r\n  const { activities } = useSelector((state) => state.activityModule)\r\n\r\n  if (!activities?.length)\r\n    return (\r\n      <div className=\"notifications-list\">\r\n        <div className=\"no-activities-container\">\r\n          <p>No activities</p>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <section className=\"notifications-list\">\r\n      {activities.map((activity) => (\r\n        <NotificaitonPreview key={activity?._id} activity={activity} />\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { setCurrPage } from '../store/actions/postActions'\r\nimport { NotificationsList } from '../cmps/notifications/NotificationsList'\r\nimport loadingGif from '../assets/imgs/loading-gif.gif'\r\nimport {\r\n  loadActivities,\r\n  setFilterByActivities,\r\n  setUnreadActivitiesIds,\r\n} from '../store/actions/activityAction'\r\nimport { updateUser } from '../store/actions/userActions'\r\n\r\nfunction Notifications() {\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { activities } = useSelector((state) => state.activityModule)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('notifications'))\r\n    if (loggedInUser?._id) {\r\n      const filterBy = {\r\n        userId: loggedInUser._id,\r\n      }\r\n      dispatch(setFilterByActivities(filterBy))\r\n      dispatch(loadActivities())\r\n    }\r\n\r\n    return async () => {\r\n      await updateLastSeenLoggedUser()\r\n      dispatch(setUnreadActivitiesIds())\r\n    }\r\n  }, [])\r\n  // }, [loggedInUser])\r\n\r\n  const updateLastSeenLoggedUser = async () => {\r\n    const lastSeenActivity = new Date().getTime()\r\n\r\n    await dispatch(updateUser({ ...loggedInUser, lastSeenActivity }))\r\n  }\r\n\r\n  if (!activities)\r\n    return (\r\n      <div className=\"message-page\">\r\n        <div className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <div className=\"notifications-page\">\r\n      <div className=\"side-bar\">\r\n        <div className=\"container\"></div>\r\n      </div>\r\n\r\n      <div className=\"main\">\r\n        <div className=\"container\">\r\n          <NotificationsList />\r\n        </div>\r\n      </div>\r\n      <div className=\"aside\">\r\n        <div className=\"container\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dateParser from './dateParser';\nimport defaultFormatter from './defaultFormatter';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = useState(now());\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    const tick = () => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n\n      return 0;\n    };\n\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}"],"names":["NotificaitonPreview","activity","history","useHistory","useState","theNotLoggedUser","setTheNotLoggedUser","str","setStr","link","setLink","createdByUser","setCreatedByUser","createdToUser","setCreatedToUser","isActivityUnread","setIsActivityUnread","loggedInUser","useSelector","state","userModule","unreadActivities","postModule","baseUrl","activityModule","getTheNotLoggedInUser","userId","createdBy","_id","createdTo","userService","user","buildActivityStr","type","postService","postId","post","fullname","linkToPost","useEffect","getTheCreatedToUser","getTheCreatedByUser","some","activityId","className","onClick","push","imgUrl","src","alt","loadingCircle","date","createdAt","NotificationsList","activities","length","map","dispatch","useDispatch","setCurrPage","filterBy","setFilterByActivities","loadActivities","updateLastSeenLoggedUser","setUnreadActivitiesIds","lastSeenActivity","Date","getTime","updateUser","loadingGif","dateParser","parsed","Number","isNaN","valueOf","parts","String","match","arr","x","parseInt","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","firstP","secondP","restPs","correctedParts","UTC","defaultFormatter","value","_unit","suffix","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","title","now","passDownProps","timeNow","setTimeNow","timeoutId","then","console","warn","seconds","Math","round","abs","unboundPeriod","period","min","max","setTimeout","tick","clearTimeout","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","React"],"sourceRoot":""}